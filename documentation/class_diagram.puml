@startuml
!theme vibrant
title Diagramme de Classes - Kanjad

package "Data Models" {
  class Categorie {
    +nomCategorie: String
    +description: String
  }

  class Produit {
    +idproduit: String
    +nomproduit: String
    +description: String
    +prix: double
    +quantite: int
    +categorie: String
    +marque: String
    +enstock: bool
    +enpromo: bool
    +img1: String
    ..
    +toMap(): Map<String, dynamic>
    +fromMap(Map): Produit
    +copyWith(): Produit
  }

  class Utilisateur {
    +idutilisateur: String
    +nomutilisateur: String
    +prenomutilisateur: String
    +emailutilisateur: String
    +roleutilisateur: String
    +villeutilisateur: String
    +addresse: String
    ..
    +toMap(): Map<String, dynamic>
    +fromMap(Map): Utilisateur
  }

  class Commande {
    +idcommande: String
    +datecommande: String
    +prixcommande: double
    +statutpaiement: String
    +methodepaiement: String
    +choixlivraison: String
    +idlivreur: String?
    ..
    +toMap(): Map<String, dynamic>
    +fromMap(Map): Commande
    +copyWith(): Commande
  }

  class Facture {
    +idfacture: String
    +idcommande: String
    +datefacture: String
    +prixfacture: double
    ..
    +toMap(): Map<String, dynamic>
    +fromMap(Map): Facture
  }

  class Message {
    +idmessage: String
    +contenu: String
    +datemessage: DateTime
    +role: String
    ..
    +toMap(): Map<String, dynamic>
    +fromMap(Map): Message
  }

  class Notification {
    +idnotification: String
    +titre: String
    +message: String
    +type: String
    +statut: String
    ..
    +toMap(): Map<String, dynamic>
    +fromMap(Map): Notification
  }

  class Promotion {
    +id: String
    +imageUrl: String
    +videoUrl: String?
    +cote: String
    +active: bool
  }
}

package "Services & Providers" {
  class SupabaseService {
    +getProduits(): Future<List<Produit>>
    +getUtilisateur(String): Future<Utilisateur?>
    +addCommande(Commande): Future<void>
    +addFacture(Facture): Future<void>
    +createProduit(Produit): Future<void>
    +updateProduit(Produit): Future<void>
    +deleteProduit(String): Future<void>
    ..
  }

  class AuthService {
    +signInWithEmailAndPassword(...): Future<AuthResponse>
    +signUpWithEmailAndPassword(...): Future<AuthResponse>
    +signOut(): Future<void>
    +createUser(Utilisateur): Future<void>
  }

  class ProductProvider <<ChangeNotifier>> {
    +products: List<Produit>
    +loadProducts(): Future<void>
  }

  class PanierProvider <<ChangeNotifier>> {
    +idsPanier: List<String>
    +productQuantities: Map<String, int>
    +clicPanier(String): Future<void>
    +clearPanier(): Future<void>
  }

  class SouhaitsProvider <<ChangeNotifier>> {
    +idsSouhaits: List<String>
    +clicSouhait(String): Future<void>
  }

  class MessageProvider <<ChangeNotifier>> {
    +messages: List<Message>
    +sendMessage(...): Future<bool>
  }
}

package "UI (Screens)" {
  class Accueilu
  class Accueila
  class Details
  class Panier
  class Pageconnexion
}

' --- Relationships ---

' Data Model Relationships
Produit "1" -- "1" Categorie : "appartient à"
Commande "1" -- "1" Utilisateur : "passée par"
Commande "1" -- "0..1" Utilisateur : "livrée par (livreur)"
Commande "1" -- "*" Produit : "contient"
Facture "1" -- "1" Commande : "concerne"
Facture "1" -- "1" Utilisateur
Message "1" -- "1" Utilisateur : "envoyé par"
Message "1" -- "1" Produit : "concerne"
Notification "0..1" -- "1" Utilisateur
Notification "0..1" -- "1" Commande
Notification "0..1" -- "1" Produit

' Service/Provider Relationships
SupabaseService ..> Produit
SupabaseService ..> Utilisateur
SupabaseService ..> Commande
SupabaseService ..> Facture
AuthService ..> Utilisateur

ProductProvider ..> SupabaseService
PanierProvider ..> SupabaseService
SouhaitsProvider ..> SupabaseService
MessageProvider ..> SupabaseService

' UI to Provider Relationships
Accueilu ..> ProductProvider
Accueilu ..> PanierProvider
Accueilu ..> SouhaitsProvider
Details ..> PanierProvider
Details ..> SouhaitsProvider
Panier ..> PanierProvider
Pageconnexion ..> AuthService
Accueila ..> SupabaseService

@enduml
